{"version":3,"sources":["utilities/AuthEvent.js","utilities/AuthService.js","pages/Profile.js","pages/Signup.js","pages/Login.js","pages/CreateEvent.js","components/ProtectedRoute.js","components/CleanComps.js","pages/CleanUps.js","components/CleanDetail.js","components/Nav.js","pages/MyCleanUps.js","pages/Upcoming.js","App.js","serviceWorker.js","index.js"],"names":["AuthEvent","createBrowserHistory","makeEvent","headline","date","description","location","service","method","url","data","then","response","catch","error","console","log","getEvent","axios","get","process","getEventDetails","id","getUserDB","create","baseURL","withCredentials","this","AuthService","signup","username","email","firstname","lastname","dob","password","login","setUser","loggedIn","getUser","user","localStorage","setItem","JSON","stringify","parse","getItem","logout","res","removeItem","eventUtils","auth","Profile","props","state","setState","message","history","push","className","src","alt","to","onClick","handleLogout","Component","Signup","handleFormSubmit","event","preventDefault","pathname","handleChange","target","name","value","onSubmit","type","placeholder","onChange","e","handleLogin","handleFormLogin","String","bind","CreateEvent","handleEventSubmit","handleEvent","ProtectedRoute","component","redirectUrl","rest","render","from","CleanComps","btnText","btnClass","key","cleanup","_id","join","hello","Cleanup","cleanups","err","map","CleanDetail","match","params","title","Nav","fixProps","withRouter","MyCleanUps","Upcoming","App","exact","path","Login","CleanUps","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.742a3546.chunk.js","sourcesContent":["import axios from 'axios';\nimport {withRouter} from \"react-router-dom\";\nimport { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();\nexport default class AuthEvent {\n  constructor() {\n    let service = axios.create({\n      baseURL: `${process.env.REACT_APP_SERVER}/api`,\n      withCredentials: true\n    });\n    this.service = service;\n  }\n  makeEvent = (headline, date, description, location) => {\n    return this.service({\n      method: \"POST\",\n      url: '/create_event', \n      data: {headline, date, description, location}\n    })\n    .then(response => response.data)\n    .catch(error =>{\n      console.log(error);\n    })\n  }\n  getEvent = ()=>{\n    return axios.get(`${process.env.REACT_APP_SERVER}/api/cleanups`)\n    .then(response => \n        response.data\n      )\n    .catch(error =>{\n      console.log(error);\n    })\n  }\n\n  getEventDetails = (id) => {\n    return axios.get (`${process.env.REACT_APP_SERVER}/api/cleanups/${id}`)\n  } \n  getUserDB = () => {\n    return this.service({\n      method: \"GET\",\n      url: \"/user-profile\"\n    })\n  } \n \n}\n\n","import axios from 'axios';\n\nexport default class AuthService {\n  constructor() {\n    let service = axios.create({\n      baseURL: `${process.env.REACT_APP_SERVER}/api`,\n      withCredentials: true\n    });\n    this.service = service;\n  }\n\n  signup = (username, email, firstname, lastname, dob, password) => {\n      return this.service({\n      method: \"POST\",\n      url: '/signup', \n      data: {username, email, firstname, lastname, dob, password}\n    })\n    .then(response => response.data)\n    .catch(error =>{\n      console.log(error);\n    })\n  }\n\n  login = (username, password) => {\n    return this.service({\n        method: \"POST\",\n        url: '/',\n        data: {username,password}\n    })\n    .then((response)=> {\n        console.log(response)\n        this.setUser(response.data.username)\n    })\n    .catch(error =>{\n        console.log(error);\n    })\n  }\n\n  loggedIn = ()=>{\n    const user = this.getUser()\n    return !!user; \n  }\n\n  setUser = (user)=>{\n    localStorage.setItem('user', JSON.stringify(user));\n  }\n\n  getUser = ()=>{\n    return JSON.parse(localStorage.getItem('user'));\n  }\n\n  logout = ()=>{\n    return this.service({\n      url: '/',\n    })\n    .then((res)=> {\n      localStorage.removeItem('user');\n    })\n  }  \n  \n}\n\n","import React, { Component } from 'react'\nimport {Link} from \"react-router-dom\";\nimport AuthEvent from '../utilities/AuthEvent';\nimport AuthService from \"../utilities/AuthService\";\nconst eventUtils = new AuthEvent();\nconst auth = new AuthService();\n\n\nexport default class Profile extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      user: {}\n    }  \n  }\n  componentDidMount(){\n    eventUtils.getUserDB()\n    .then(response => {\n      console.log(response)\n      this.setState({\n        user: response.data\n      })\n    })\n    .catch(error =>{\n      console.log(error);\n      if(error.response.data.message === \"Unauthorized\") this.props.history.push(\"/\")\n    })\n  }\n  render() {\n    return (\n     <div>\n      <img className=\"signup-logo\" src=\"/img/cleanup-logo.png\" alt=\"img\"/>\n        <div className=\"profile-body\">\n          <div className=\"profile-header\">\n            <Link \n              to=\"/\" \n              className=\"link-logout\" \n              onClick={this.handleLogout}>\n              logout\n            </Link>\n            <Link\n              to=\"/profile\">\n              <h3 className=\"hello\">\n              Hi, {auth.getUser()}</h3>\n            </Link>    \n          </div>\n        <div className=\"profile-container\">\n          <div className=\"profile-1\">\n            <Link\n              to='/cleanups'\n              className=\"link-profile\">\n              <h3>Browse CleanUps    </h3> \n            </Link>   \n          </div>\n          <div className=\"profile-2\">\n            <Link\n              to='/create_event'\n              className=\"link-profile\">\n              <h3>Plan a CleanUp</h3>\n            </Link>             \n          </div>\n          <div className=\"profile-3\">\n            <Link\n              to='/mycleanups'\n              className=\"link-profile\">\n              <h3>My CleanUps</h3>\n            </Link>\n          </div>\n          <div className=\"upcoming\">\n            <Link\n              to='/upcoming'\n              className=\"link-profile\">\n              <h3>Upcoming CleanUps</h3>\n            </Link>\n          </div>\n          </div>\n        </div>\n     </div> \n    )\n  }\n}\n","import React, { Component } from 'react';\nimport AuthService from '../utilities/AuthService';\nimport {Link} from \"react-router-dom\";\n\nexport default class Signup extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      firstname: '',\n      lastname: '',\n      dob: '',\n      email: '',\n      username: '',\n      password: ''\n    };\n    this.service = new AuthService();\n  }\n    handleFormSubmit = (event) => {\n      event.preventDefault();\n\n      const username = this.state.username;\n      const email = this.state.email;\n      const firstname = this.state.firstname;\n      const lastname = this.state.lastname;\n      const dob = this.state.dob;\n      const password = this.state.password;\n    \n      this.service.signup(username, email, firstname, lastname, dob, password)\n      .then( response => {\n        this.props.history.push({\n          pathname: '/',\n          state: response.username\n        })\n        .catch((error)=> {\n        })  \n      })\n      .catch( error => console.log(error) )\n    }\n    handleChange = (event) => {  \n      const {name, value} = event.target;\n      this.setState({[name]: value});\n}  \n  render() {\n    return (\n      <div className=\"signup-body\">    \n        <div className=\"signup-header\"></div>\n        <img className=\"signup-logo\" src=\"/img/cleanup-logo.png\" alt=\"img\"/>\n        <h5 id=\"signup-heading\">Make a difference while you mingle.</h5> \n        <div className=\"signup\">\n          <form className=\"form-login\" onSubmit={this.handleFormSubmit}>\n\n            <input type=\"username\" name=\"username\" placeholder=\"create username\" value={this.state.username} onChange={ e => this.handleChange(e)} ></input>\n\n            <input type=\"email\" name=\"email\" placeholder=\"email\" value={this.state.email} onChange={ e => this.handleChange(e)} ></input>\n\n            <input type=\"text\" name=\"firstname\" placeholder=\"first name\" value={this.state.firstname} onChange={ e => this.handleChange(e)} ></input>\n\n            <input type=\"text\" name=\"lastname\" placeholder=\"last name\" value={this.state.lastname} onChange={ e => this.handleChange(e)} ></input>\n\n            <input type=\"date\" name=\"dob\" placeholder=\"date of birth\" value={this.state.dob} onChange={ e => this.handleChange(e)} ></input>\n\n            <input type=\"password\" name=\"password\" placeholder=\"create password\" value={this.state.password} onChange={ e => this.handleChange(e)}></input>\n\n            <button type=\"submit\" value=\"Submit\">submit</button> \n\n            <p id=\"signup\">Have account?\n              <Link \n                to={\"/\"}> \n                Log in\n              </Link>\n            </p>\n          </form>     \n        </div> \n    </div>  \n\n    )\n  }\n}\n\n\n\n","import React, { Component } from 'react';\nimport AuthService from '../utilities/AuthService';\nimport {Link} from \"react-router-dom\";\nconst auth = new AuthService();\n\nexport default class Signup extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      user: {\n        username: String,\n        password: String\n       },\n    error: null\n  }\n  this.handleLogin = this.handleLogin.bind(this);\n}  \n  handleLogin = (e)=> {\n    e.preventDefault();\n    console.log(this.state.user)\n    auth.login(this.state.user.username, this.state.user.password)\n        .then((response)=> {\n            console.log(response)\n            this.props.history.push(\"/profile\");\n        })\n        .catch((error)=> {\n          console.log(error)\n            this.setState({error: error});\n        })\n  }\n  handleFormLogin = (e)=> {\n    let user = {...this.state.user}\n    user[e.target.name] = e.target.value\n    this.setState({ \n        user\n    })\n  } \n  render() {\n    return (\n      <div className=\"login-body\">    \n        <div className=\"login-header\"></div>\n        <img className=\"login-logo\" src=\"/img/cleanup-logo.png\" alt=\"img\"/>\n        <h5 id=\"login-heading\">Make a difference while you mingle.</h5>\n        <div className=\"sign-up \">\n          <form className=\"form-login\" onSubmit={this.handleLogin}>\n\n          <input type=\"text\" name=\"username\" placeholder=\"enter your username\" value={this.state.username} onChange={this.handleFormLogin}/>  \n\n          <input type=\"password\" name=\"password\" placeholder=\"enter your password\" value={this.state.password} onChange={this.handleFormLogin}/>\n\n          <button type=\"submit\" value=\"Submit\">submit</button> \n          </form>\n\n          <p id=\"signup\">Don't have account? \n            <Link to={\"/signup\"}> sign up</Link>\n          </p>\n        </div>       \n      </div>   \n    )\n  }\n}\n","import React, { Component } from 'react'\nimport AuthEvent from '../utilities/AuthEvent';\nimport {Link} from \"react-router-dom\";\n\nexport default class CreateEvent extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      headline: '',\n      date: '',\n      description: '', \n      location: ''\n    };\n    this.service = new AuthEvent();\n  }\n    handleEventSubmit = (event) => {\n      event.preventDefault();\n      const headline = this.state.headline;\n      const date = this.state.date;\n      const description = this.state.description;\n      const location = this.state.location;\n     \n      \n      this.service.makeEvent( headline, date, description, location)\n      .then( response => {\n        this.props.history.push({\n          pathname: '/cleanups',\n          state: response.headline\n        })\n      })\n      .catch( error => console.log(error) )\n    }\n    handleEvent = (event) => { \n      const {name, value} = event.target;\n      this.setState({[name]: value});\n}  \n\n  render() {\n    return (\n      <div className=\"login-body\">\n        <div className=\"login-header\"></div>\n        <img className=\"login-logo\" src=\"/img/cleanup-logo.png\" alt=\"img\"/>\n        <h5 id=\"login-heading\">Make a difference while you mingle.</h5>\n          <div className=\"signup\">\n            <form className=\"form-login\" onSubmit={this.handleEventSubmit}>\n\n              <input type=\"text\" name=\"headline\" placeholder=\"headline\" value={this.state.headline} onChange={ e => this.handleEvent(e)} ></input>\n\n              <input type=\"date\" name=\"date\" placeholder=\"date\" value={this.state.date} onChange={ e => this.handleEvent(e)} ></input>\n\n              <input type=\"text\" name=\"description\" placeholder=\"description\" value={this.state.description} onChange={ e => this.handleEvent(e)} ></input>\n\n              <input type=\"text\" name=\"location\" placeholder=\"location\" value={this.state.location} onChange={ e => this.handleEvent(e)} ></input>\n          \n              <br></br>\n\n              <button type=\"submit\" value=\"Submit\">Create CleanUp!</button> \n               \n              <Link \n                to={\"/profile\"}> \n                <p id=\"signup\">maybe later</p>\n              </Link>\n            \n            </form>\n            <br></br>\n          </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { Route, Redirect } from 'react-router-dom';\nimport AuthService from '../utilities/AuthService';\nconst auth = new AuthService();\n\nconst ProtectedRoute = ({component: Component, redirectUrl, ...rest}) => {  \n  return (\n    <Route\n      {...rest}\n      render={ props  => {\n      var user = auth.getUser();\n        if(user){\n          return <Component {...props} />\n        } else {\n          return <Redirect to={{pathname: redirectUrl || '/', state: {from: props.location}}} />\n            }\n        }\n        }\n      />\n    )\n}\nexport default ProtectedRoute;","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\n\nexport default class CleanComps extends Component {\n  constructor(){\n    super()\n    this.state = {\n        btnText: \"Join CleanUp\",\n        btnClass: \"joinBtn\"\n    }\n}\n  render() {\n    return ( \n      <div className=\"border\" key={this.props.cleanup._id}>\n        <Link \n          to={`/cleanups/${this.props.cleanup._id}`}>\n          <h1>{this.props.cleanup.headline}</h1>\n        </Link>\n          <p>{this.props.cleanup.description}</p>\n          <button className={this.state.btnClass} onClick={() => {this.props.join(this.props.cleanup._id); this.setState({btnText: \"Joined!\", btnClass: \"pushedBtn\"})}} >{this.state.btnText}</button>\n      </div> \n    )\n  }\n}\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport CleanComps from '../components/CleanComps';\nimport {Link} from \"react-router-dom\";\nimport AuthEvent from '../utilities/AuthEvent';\nimport AuthService from \"../utilities/AuthService\";\nconst hello = new AuthService();\nconst auth = new AuthEvent();\n\nexport default class Cleanup extends Component {\n  constructor(){\n    super()\n    this.state = {\n        cleanups: []\n    }\n    let service = axios.create({\n      baseURL: `${process.env.REACT_APP_SERVER}/api`,\n      withCredentials: true\n    });\n    this.service = service;\n}\n\njoin = (id) => {\n  return this.service({\n    method: \"POST\",\n    url: `/join/${id}`\n  })\n    .then(response => {\n      \n    })\n    .catch(error =>{\n      console.log(error);\n      if(error.response.data.message === \"Unauthorized\") this.props.history.push(\"/\")\n    })\n}\ncomponentDidMount() {\n\n  auth.getEvent()\n  .then(response => {\n    console.log(response)\n    this.setState({\n      cleanups: response\n    })\n  })\n  .catch(err => {console.log(err)})\n}\n  render() {\n    return (\n      <div>\n        <img className=\"signup-logo\" src=\"/img/cleanup-logo.png\" alt=\"img\"/>\n        <div className=\"profile-body\">\n        <div className=\"profile-header\">\n       <Link\n          to=\"/profile\">\n          <h3 className=\"\">Hi,{hello.getUser()}</h3>\n        </Link>\n        </div>\n        <div> \n          {this.state.cleanups.map(cleanup =>\n          <CleanComps cleanup={cleanup} join={this.join}/>\n            )}\n        </div>\n         </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport AuthEvent from '../utilities/AuthEvent';\nconst eventUtils = new AuthEvent();\n\nexport default class CleanDetail extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      cleanup: null\n  }\n}\n  componentDidMount(){\n    eventUtils.getEventDetails(this.props.match.params.id)\n    .then(response => {\n      console.log(response)\n      this.setState({\n        cleanup: response.data\n      })\n    })\n    .catch(err => {\n      console.log(err)\n    })\n  }\n  render() {\n    return (\n      <>\n      {this.state.cleanup ?\n        <div>\n          <h1>{this.state.cleanup.title}</h1>\n          <p>{this.state.cleanup.description}</p>\n          <Link to={'/cleanups'}>Back to cleanups</Link>\n        </div>:\n        <p>Loading...</p>\n      }\n      </>\n    )\n  }\n}\n","\nimport React, {Component} from 'react';\nimport { withRouter } from \"react-router\"; \nimport Profile from '../pages/Profile';\nimport {Link} from \"react-router-dom\";\nimport AuthService from \"../utilities/AuthService\";\nconst auth = new AuthService();\n\nclass Nav extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n        user: null\n    }\n  }\n    handleLogout = (e)=> {\n        e.preventDefault();\n        var fixProps = this.props;\n        auth.logout()\n            .then(()=> {\n                this.setState({user: null}, ()=> {\n                    fixProps.history.push(\"/\");\n                })               \n            })\n            .catch((error)=> {\n                this.setState({error: error.message})\n            })\n    }\n    componentDidMount() {\n        this.setState({\n            user: auth.getUser()\n        })\n    }\n    render() {\n      return (\n        <nav>\n          <Link \n            to=\"/\" \n            className=\"link-logo\">\n            <img className=\"logo\" src=\"/img/cleanup-logo.png\" alt=\"img\"/>\n          </Link>\n            {\n              localStorage.user? \n                <div></div>\n              :\n                <div>\n                  <Link\n                    to='/signup'\n                    className=\"link-main\"\n                    >signup\n                  </Link>\n                  <Link\n                    to='/login'\n                    className=\"link-main\"\n                    >login\n                  </Link>\n                </div>\n            }\n            </nav>\n        )\n    }\n}\n\nexport default withRouter(Nav);\n\n\n","import React, { Component } from 'react'\nimport Nav from \"../components/Nav\";\nimport {Link} from \"react-router-dom\";\nimport AuthEvent from '../utilities/AuthEvent';\nimport AuthService from \"../utilities/AuthService\";\nconst eventUtils = new AuthEvent();\nconst auth = new AuthService();\n\nexport default class MyCleanUps extends Component {\n  render() {\n    return (\n      <div>\n        <Nav />\n        <div className=\"profile-body\">\n          <div className=\"mycleanups-header\">\n            <Link \n              to=\"/logout\" \n              className=\"link-logout\" \n              onClick={this.handleLogout}>\n              logout\n            </Link>\n            <Link\n              to=\"/profile\">\n              <h3 className=\"hello-my\">\n              Hi, {auth.getUser()}</h3>\n            </Link>\n          </div>\n        <div className=\"profile-container\"></div>\n        </div>\n     </div> \n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Nav from \"../components/Nav\";\nimport {Link} from \"react-router-dom\";\nimport AuthService from \"../utilities/AuthService\";\nconst auth = new AuthService();\n\nexport default class Upcoming extends Component {\n  render() {\n    return (\n      <div>\n        <Nav />\n        <div className=\"profile-body\">\n          <div className=\"upcoming-header\">\n            <Link \n              to=\"/logout\" className=\"link-logout\"\n              onClick={this.handleLogout}>\n              logout\n            </Link>\n            <Link\n              to=\"/profile\">\n              <h3 className=\"hello-my\">\n              Hi, {auth.getUser()}</h3>\n            </Link> \n          </div>\n         <div className=\"profile-container\"></div>\n        </div>\n      </div> \n    )\n  }\n}\n\n","import React, { Component } from 'react'\nimport { Route, Switch } from 'react-router-dom';\nimport Profile from './pages/Profile';\nimport Signup from './pages/Signup';\nimport Login from './pages/Login';\nimport CreateEvent from './pages/CreateEvent';\nimport ProtectedRoute from './components/ProtectedRoute';\nimport CleanUps from './pages/CleanUps';\nimport CleanDetail from './components/CleanDetail';\nimport MyCleanUps from './pages/MyCleanUps';\nimport Upcoming from './pages/Upcoming';\nimport './App.css';\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div>\n        <Switch>\n          <Route exact path=\"/\" component={Login}/>\n          <Route path=\"/signup\" component={Signup}/>\n          <Route path=\"/mycleanups\" component={MyCleanUps}/>\n          <Route path=\"/create_event\" component={CreateEvent}/>\n          <Route path=\"/upcoming\" component={Upcoming}/>\n          <Route exact path=\"/cleanups\" component={CleanUps}/>\n          <Route path=\"/cleanups/:id\" component={CleanDetail}/>\n          <ProtectedRoute \n            redirectUrl='/signup' \n            path=\"/create_event\" \n            component={CreateEvent}\n          />\n          <Route path=\"/profile\" component={Profile}/>\n          <ProtectedRoute \n            redirectUrl='/' \n            path=\"/profile\" \n            component= {Profile}\n          />\n        </Switch> \n      </div>\n    )\n  }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router} from 'react-router-dom'\n\nReactDOM.render(<Router> <App/> </Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}